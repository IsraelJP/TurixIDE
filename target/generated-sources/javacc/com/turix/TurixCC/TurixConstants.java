/* Generated By:JavaCC: Do not edit this line. TurixConstants.java */
package com.turix.TurixCC;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface TurixConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int NUM = 5;
  /** RegularExpression Id. */
  int STRING_LITERAL = 6;
  /** RegularExpression Id. */
  int MAS = 7;
  /** RegularExpression Id. */
  int MENOS = 8;
  /** RegularExpression Id. */
  int MULTIPLICACION = 9;
  /** RegularExpression Id. */
  int DIVISION = 10;
  /** RegularExpression Id. */
  int MODULO = 11;
  /** RegularExpression Id. */
  int DOUBLE = 12;
  /** RegularExpression Id. */
  int IGUAL = 13;
  /** RegularExpression Id. */
  int SQRT = 14;
  /** RegularExpression Id. */
  int POW = 15;
  /** RegularExpression Id. */
  int COS = 16;
  /** RegularExpression Id. */
  int SIN = 17;
  /** RegularExpression Id. */
  int LOG = 18;
  /** RegularExpression Id. */
  int INT = 19;
  /** RegularExpression Id. */
  int UINT = 20;
  /** RegularExpression Id. */
  int FLOAT = 21;
  /** RegularExpression Id. */
  int STRING = 22;
  /** RegularExpression Id. */
  int BOOL = 23;
  /** RegularExpression Id. */
  int CHARACTER = 24;
  /** RegularExpression Id. */
  int AND = 25;
  /** RegularExpression Id. */
  int NOT = 26;
  /** RegularExpression Id. */
  int OR = 27;
  /** RegularExpression Id. */
  int REL_OP = 28;
  /** RegularExpression Id. */
  int DOS_PUN = 29;
  /** RegularExpression Id. */
  int FLECHA = 30;
  /** RegularExpression Id. */
  int COMILLA = 31;
  /** RegularExpression Id. */
  int COMA = 32;
  /** RegularExpression Id. */
  int FUNC = 33;
  /** RegularExpression Id. */
  int LET = 34;
  /** RegularExpression Id. */
  int VAR = 35;
  /** RegularExpression Id. */
  int TERMINATOR = 36;
  /** RegularExpression Id. */
  int SEPARATOR = 37;
  /** RegularExpression Id. */
  int PRINT = 38;
  /** RegularExpression Id. */
  int READLINE = 39;
  /** RegularExpression Id. */
  int BREAK = 40;
  /** RegularExpression Id. */
  int CASE = 41;
  /** RegularExpression Id. */
  int DEFAULT_KEYWORD = 42;
  /** RegularExpression Id. */
  int REPEAT = 43;
  /** RegularExpression Id. */
  int ELSE = 44;
  /** RegularExpression Id. */
  int FOR = 45;
  /** RegularExpression Id. */
  int IF = 46;
  /** RegularExpression Id. */
  int IN = 47;
  /** RegularExpression Id. */
  int RETURN = 48;
  /** RegularExpression Id. */
  int SWITCH = 49;
  /** RegularExpression Id. */
  int WHERE = 50;
  /** RegularExpression Id. */
  int WHILE = 51;
  /** RegularExpression Id. */
  int K_I = 52;
  /** RegularExpression Id. */
  int K_F = 53;
  /** RegularExpression Id. */
  int PAR_I = 54;
  /** RegularExpression Id. */
  int PAR_F = 55;
  /** RegularExpression Id. */
  int COR_I = 56;
  /** RegularExpression Id. */
  int COR_F = 57;
  /** RegularExpression Id. */
  int FALSE = 58;
  /** RegularExpression Id. */
  int TRUE = 59;
  /** RegularExpression Id. */
  int IDENT = 60;
  /** RegularExpression Id. */
  int ERROR = 61;
  /** RegularExpression Id. */
  int ERROROPERA = 62;
  /** RegularExpression Id. */
  int ERROR_IDENT = 63;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "<NUM>",
    "<STRING_LITERAL>",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"Double\"",
    "\"=\"",
    "\"sqrt\"",
    "\"pow\"",
    "\"cos\"",
    "\"sin\"",
    "\"log\"",
    "\"Int\"",
    "\"UInt\"",
    "\"Float\"",
    "\"String\"",
    "\"Bool\"",
    "\"Character\"",
    "\"&&\"",
    "\"!\"",
    "\"||\"",
    "<REL_OP>",
    "\":\"",
    "\"->\"",
    "\"\\\"\"",
    "\",\"",
    "\"func\"",
    "\"let\"",
    "\"var\"",
    "\"terminator\"",
    "\"separator\"",
    "\"print\"",
    "\"readLine\"",
    "\"break\"",
    "\"case\"",
    "\"default\"",
    "\"repeat\"",
    "\"else\"",
    "\"for\"",
    "\"if\"",
    "\"in\"",
    "\"return\"",
    "\"switch\"",
    "\"where\"",
    "\"while\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"false\"",
    "\"true\"",
    "<IDENT>",
    "<ERROR>",
    "<ERROROPERA>",
    "<ERROR_IDENT>",
  };

}
